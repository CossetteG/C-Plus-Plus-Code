Notes for C++

prof. Gabriel Raymer
TA Tyler Rees

email the prof. 

Late work- keep it within reason and you'll get credit
Don't be late on projects 
code pretty fires

cobol is used in banking

zybooks- paid for (:
)-has 6 projects

c is the basic assembly
c sharp is an open-source programming language
c+ and c++ have more 

internet has been a normal thing since 1995 

Module 1:

hello world, user input

source file > compile > object file > link > executable file 

cout << (output to console)
cin >> (input from console)  

developing with repl.it 

static and dynamic typing- python is dynamic, c++ is static
you declare the type of the variable up front
size is determined at compile time



Variables and Assignments

built-in: bool, char, int, float, double
integers- short, long, longlong, unsigned, __int8, int16, in32, etc
double replaces float- different bit count ( 32f v 64d )
long double has maximum precision

#include <iostream>
#inclue <iomanip>
#include <math>

using namespace std;

int main(){
    double sphereVolume;
    double sphereRadius;

    cin >> sphereRadius;
}

Numeric Literals- can use ' as a group separator
0b1011'0011'0001'1000   binary
0xB318                  hex
1'000'000               decimal
1.23e5                  decimal

integer division- if both operands are integers, the remainder is dropped
if either is a floating-point, the remainder is kept
    if you cast as integer- it is dropped< narrowing conversion

be careful with compiling too much stuff- you can put everythin in 1 folder tho

int main(){
    int n = 3/2;
    auto m = 3/2.0;
    int k {3/2};
    cout << n << ", " << m << ", " << k << endl;
}

math with large integers can overflow- silent error

signed int - cut the size of the int in half to include its counterparts in negative
unsigned int- normal positive int with a set size 

int main(){
    singed int n = INT_MAX
    cout << n << endl;
    cout << n+1 << endl;

    unsigned int n = INT_MAX
    cout << n << endl;
}

floats are limited to 32 bits, doubles are 64 bits 
as numbers grows bigger, they are spaced further apart

the computer skips integers when numbers get really really big- rounding error
^floating put



Control Flow AKA Switches and IF statements

code-cotta- practicing the same code over and over to get muscle memory for coding

We'll start doing projects will start in February

watchlist- watch the variables to see what it's set to
call stack- where code resides in memory 
use your compiler!!

if..else if..else
the condition must be in parentheses
If you have multiple lanes in a branch, use blocks:
{
    <line 1>
    <line 2>
}

Order of evaluation:
() ! */% +- <><=>= ==!= && ||

m<x<n is not allowed, use m<x && x<n
when in doubt, use parentheses

Bitwise operations
used to access bits of a variable 
-to control aspects of your operating systems hardware
-can save memory in certain applications

| or & and ^ xor ~ not >> shift right << shift left 
be careful to not lose bits 
xor is one or the other but not both 

switches and cases
if / if else / else 

switch (a) {
    case 0:
        //
        break;
    case 1:
        //
        break;
    default:
        //
        break;
}
if you don't have a break statement, it'll read the block and go to the next one 
until it reaches a break 

to get a char at pos k from str s 
s.at(k)  <<checks that the position is valid
s[k]

ternary operators: _?_:_   <Condition>? <TrueResult>:<FalseResult> 
shorthand for an if else that yields a value and can nest

recursion 

fact(n):{
    n==1? cout<<n:fact(n-1);
}


ok lets break down a hello world

#include <iostream>
using namespace std;

int main() {
    cout << "Hello World";
    cout << endl;
}

#include <iostream>
//variable values mostly go in <> I think idk ask later
using namespace std;
// import statements. idk we'll get into it later

char main() {
//char is the return value is supposed to be a character. can also be int or whatever
//main is the main function. most c languages have main every time
//parentheses to denote a function. as per usual
//open curly brackets- anything in the curly brackets is in the function
    cout << "Hello World";
    //cout (c-out) for characters out- basically the print statement
    //the pointer points to the direction the variable is going to 
    //so the "Hello World" variable will go into the cout function 
    cout << endl;
    //another cout to end the line. you could also put in the same line as the first but whatevs
    //technically endl starts a new line 
    //always end your line with ;
}
//always end your func with close curly bracket 

"string literal"

#include <iostream>
using namespace std;

int main() {
   int drivingYear;
   int drivingAge;
   int numStates; 
    //declaring some variables here

   drivingYear = 2014;
   drivingAge = 18;
   numStates = 10; 
    //and setting them some values. No you cannot declare them and set them in the same line

   cout << "In " << drivingYear << " the driving age is " << drivingAge << "." << endl;
    // you can put more stuff in one line by using more pointers
   cout << numStates << " states have exceptions." << endl;
  

   return 0;
}

//single line comment

/*
mulitline or block comment
*/

ERRORS

syntax error aka compile time error:

main.cpp:6:27: error: expected ';' after expression
   cout << "Traffic today" 
                          ^
                          ;

the compiler will give you all the errors it finds in numerical order 
but some errors are side effects of previous errors
so start with the first one it gives you

other errors include logic errors- aka bugs

compilers turn c-language into executable binary code 


Loops 

while- the condition must be in parentheses
do while- the condition is checkd after the loop body runs 
good for undetermined amount of runs

for -start/condition/step or range-based loop 
good for a determined amount of runs 

int i;
while (cin >> i)
  cout << "You entered "<<i<<endl; 
//this code just returns the int you put into it

ctr d to exit loops and stuff 

check your input with while loops 

int i;
cout<<"Enter a number btwn 1-5: ";
cin>>n;
while(n<1||n>5) {
    cout << "Enter num 1-5" ;
    cin >> n;
}
cout << "You entered: " << n << endl:

int n;
do {
    cout<<"Enter a number btwn 1-5:";
    cin>>n;
} while (n<1||n>5) {
    whatever;
}

for loop is technically a shorthand for a while loop 
the scope of loop variables are always contrained to inside the loop 

equivalent loops 

for( int i= 0; 1<5; ++i)
    cout<<i<<""; 
    cout<<endl;

string s = "hello";
for (char c:s)
    cout<<c<<endl;
//c is the loop variable it takes on each value of the sequence in turn 

for (char c:input_word) {
    if(isalpha(c)) {
        ++num_letters
    }
}

Truthiness Idiom - a numeric expression is true when it is non-zero 
isalpha nad other <cctype> functions don't return true when its argument is a letter 
as a general rule check for false rather than true 

functions tolower and toupper - they return ints!
to print as characters- cast to char or store in char variable 

break and continue 
break exites the closest enclosing loop
continue cycles on the closest enclosing loop 
^more for error handling 

all named values have a scope - the region where it is visible 
{
    //arbitrary scope
    ::i //global variable 
}

enums are compile-time constants 
enum is like a fancy array /dict 

